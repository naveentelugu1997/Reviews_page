{"version":3,"sources":["Components/Reviews.js","Components/Pagenation.js","App.js","reportWebVitals.js","index.js"],"names":["Reviews","IsLoading","reviews","currentPage","reviewsPerPage","showMore","rendering","console","log","indexOfLastReview","indexOfFirstReview","currentReviews","slice","map","data","hasOwnProperty","className","i","Avatar","friend","reviewer","name","Rating","value","ratings","Overall","readOnly","size","title","comment","Box","Typography","component","delivery_time","discounts_and_offers","matches_description","matches_photo","packaging","price","onClick","Divider","Pagenation","numberOfReviews","pagenate","pageNumbers","Math","ceil","push","Pagination","count","onChange","App","useState","totalNoOfReviews","setTotalNoOfReviews","setReviews","isLoading","setIsLoading","productId","setProductId","viewerId","setViewerId","setCurrentPage","setRendering","products","viewers","product","label","viewer","useEffect","a","axios","get","res","length","fetchdata","e","target","sort","b","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUA0FeA,MApFf,YAA2F,IAAzEC,EAAwE,EAAxEA,UAAWC,EAA6D,EAA7DA,QAASC,EAAoD,EAApDA,YAAaC,EAAuC,EAAvCA,eAAgBC,EAAuB,EAAvBA,SAO/D,GAPsF,EAAbC,UAMzEC,QAAQC,IAAI,UACTP,EACC,OAAO,4CAGX,IAAMQ,EAAoBN,EAAYC,EAChCM,EAAqBD,EAAoBL,EACzCO,EAAiBT,EAAQU,MAAMF,EAAoBD,GAOzD,OALAE,EAAeE,KAAI,SAACC,GAEhB,OADIA,EAAKC,eAAe,cAAaD,EAAKT,UAAW,GAC9C,QAIP,qBAAKW,UAAU,UAAf,SACKL,EAAeE,KAAI,SAACC,EAAKG,GAAN,OACR,sBAAaD,UAAU,SAAvB,UACQ,sBAAKA,UAAU,WAAf,UACI,cAACE,EAAA,EAAD,IACA,oBAAIF,UAAU,gBAAd,SAA+BF,EAAKK,OAASL,EAAKM,SAASC,KAAM,QAErE,sBAAKL,UAAU,SAAf,UAEI,cAACM,EAAA,EAAD,CAAQD,KAAK,YAAYE,MAAOT,EAAKU,QAAQC,QAASC,UAAQ,EAACC,KAAK,WACpE,qBAAIX,UAAU,eAAd,cAA+BF,EAAKc,MAApC,UAEJ,4BAAId,EAAKe,UAET,8BAEOf,EAAKT,SA8BA,KA7BR,sBAAKW,UAAU,cAAf,UACI,eAACc,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,UAAU,SAAtB,2BACA,cAACV,EAAA,EAAD,CAAQD,KAAK,YAAYE,MAAOT,EAAKU,QAAQS,cAAeP,UAAQ,EAACC,KAAK,aAE9E,eAACG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,UAAU,SAAtB,kCACA,cAACV,EAAA,EAAD,CAAQD,KAAK,YAAYE,MAAOT,EAAKU,QAAQU,qBAAsBR,UAAQ,EAACC,KAAK,aAGrF,eAACG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,UAAU,SAAtB,iCACA,cAACV,EAAA,EAAD,CAAQD,KAAK,YAAYE,MAAOT,EAAKU,QAAQW,oBAAqBT,UAAQ,EAACC,KAAK,aAGpF,eAACG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,UAAU,SAAtB,2BACA,cAACV,EAAA,EAAD,CAAQD,KAAK,YAAYE,MAAOT,EAAKU,QAAQY,cAAeV,UAAQ,EAACC,KAAK,aAG9E,eAACG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,UAAU,SAAtB,uBACA,cAACV,EAAA,EAAD,CAAQD,KAAK,YAAYE,MAAOT,EAAKU,QAAQa,UAAWX,UAAQ,EAACC,KAAK,aAG1E,eAACG,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,UAAU,SAAtB,mBACA,cAACV,EAAA,EAAD,CAAQD,KAAK,YAAYE,MAAOT,EAAKU,QAAQc,MAAOZ,UAAQ,EAACC,KAAK,kBAK9E,wBACAX,UAAU,WACVuB,QAAU,kBAAMlC,EAASS,IAFzB,SAGCA,EAAKT,SAAU,YAAc,cAE9B,cAACmC,EAAA,EAAD,CAASxB,UAAU,SApDjBC,S,eCFnBwB,MAtBf,YAAkE,IAA7CC,EAA4C,EAA5CA,gBAAiBtC,EAA2B,EAA3BA,eAAgBuC,EAAW,EAAXA,SAElD,IAAID,EACA,OAAO,wBAKX,IAFA,IAAME,EAAc,GAEZ3B,EAAE,EAAGA,GAAG4B,KAAKC,KAAKJ,EAAgBtC,GAAgBa,IACtD2B,EAAYG,KAAK9B,GAGrB,OACI,qBAAKD,UAAU,aAAf,SACI,cAACgC,EAAA,EAAD,CACAC,MAAOJ,KAAKC,KAAKJ,EAAgBtC,GACjC8C,SAAUP,O,eC0FPQ,MAxGf,WAaI,IAbY,IAAD,EAEqCC,mBAAS,GAF9C,mBAEJC,EAFI,KAEcC,EAFd,OAGmBF,mBAAS,IAH5B,mBAGJlD,EAHI,KAGKqD,EAHL,OAIuBH,oBAAS,GAJhC,mBAIJI,EAJI,KAIOC,EAJP,OAKuBL,mBAAS,IALhC,mBAKJM,EALI,KAKOC,EALP,OAMqBP,mBAAS,IAN9B,mBAMJQ,EANI,KAMMC,EANN,OAOcT,mBAAS,GAA3BhD,EAPI,sBAQ2BgD,mBAAS,GARpC,mBAQJjD,EARI,KAQS2D,EART,OASuBV,oBAAS,GAThC,mBASJ9C,EATI,KASOyD,EATP,KAWLC,EAAW,GACXC,EAAU,GACRhD,EAAE,EAAGA,GAAG,GAAGA,IAAI,CACnB,IAAMiD,EAAU,CACZC,MAAM,WAAD,OAAalD,GAClBM,MAAM,GAAD,OAAKN,IAEd+C,EAASjB,KAAKmB,GAElB,IAAI,IAAIjD,EAAE,EAAGA,GAAG,GAAGA,IAAI,CACnB,IAAMmD,EAAS,CACXD,MAAM,UAAD,OAAYlD,GACjBM,MAAM,GAAD,OAAKN,IAGdgD,EAAQlB,KAAKqB,GAiCjB,OA9BAC,qBAAU,WACHX,GAAaE,GACG,uCAAG,4BAAAU,EAAA,6DACdb,GAAa,GADC,SAEIc,IAAMC,IAAN,qCAAwCd,EAAxC,YAAqDE,IAFzD,OAERa,EAFQ,OAGdlB,EAAWkB,EAAI3D,KAAKZ,SACpBoD,EAAoBmB,EAAI3D,KAAKZ,QAAQwE,QACrCjB,GAAa,GALC,2CAAH,oDAOfkB,KAGL,CAACjB,EAAWE,IAmBX,gCACI,sBAAK5C,UAAU,iBAAf,UACI,yBAAQA,UAAU,aAAaO,MAAOmC,EAAWR,SAAU,SAAC0B,GAAMjB,EAAaiB,EAAEC,OAAOtD,QAAxF,UACI,wBAAQA,MAAM,GAAd,4BAEIyC,EAASnD,KAAK,SAACC,EAAKG,GAAN,OACV,wBAAgBM,MAAOT,EAAKS,MAA5B,SAAqCT,EAAKqD,OAA7BlD,SAIzB,yBAAQD,UAAU,YAAYO,MAAOqC,EAAUV,SAAU,SAAC0B,GAAMf,EAAYe,EAAEC,OAAOtD,QAArF,UACI,wBAAQA,MAAM,GAAd,2BAEI0C,EAAQpD,KAAK,SAACC,EAAKG,GAAN,OACT,wBAAgBM,MAAOT,EAAKS,MAA5B,SAAqCT,EAAKqD,OAA7BlD,SAIzB,wBAAQsB,QA1BC,WACjBrC,EAAQ4E,MAAK,SAACR,EAAES,GACZ,OAAOA,EAAEvD,QAAQC,QAAS6C,EAAE9C,QAAQC,WAExCsC,GAAczD,IAsBN,+BAGJ,eAAC0E,EAAA,EAAD,CAAWC,SAAS,KAApB,UACI,8BACI,cAAC,EAAD,CAAS/E,QAASA,EAClBD,UAAWuD,EACPrD,YAAaA,EACbC,eAAgBA,EAChBC,SAxCH,SAACS,GACdA,EAAKT,UAAYS,EAAKT,SACtB0D,GAAczD,IAuCEA,UAAWA,MAGnB,8BACI,cAAC,EAAD,CACAoC,gBAAiBW,EACjBjD,eAAgBA,EAChBuC,SApDC,SAACiC,EAAErD,GAChBuC,EAAevC,eCvCN2D,EAZO,SAAAC,GAChBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFhBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b0ef30cc.chunk.js","sourcesContent":["import React from 'react'\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport {Box, Avatar,Typography,Divider} from '@material-ui/core';\r\nimport './Reviews.css';\r\n\r\n\r\nfunction Reviews({IsLoading, reviews, currentPage, reviewsPerPage, showMore, rendering} ) {\r\n    \r\n    // const [toggleShowMore, setToggleShowMore] = useState(true)\r\n    // const showMore =(e)=>{\r\n    //     reviewsPerPage = 6;\r\n    // }\r\n    console.log(\"dafdsv\")\r\n    if(IsLoading){\r\n        return <h3>Loading...</h3>\r\n    } \r\n\r\n    const indexOfLastReview = currentPage*reviewsPerPage;\r\n    const indexOfFirstReview = indexOfLastReview - reviewsPerPage;\r\n    const currentReviews = reviews.slice(indexOfFirstReview, indexOfLastReview);\r\n\r\n    currentReviews.map((data)=>{\r\n        if(!data.hasOwnProperty(\"showMore\")) data.showMore = true;\r\n        return null ;\r\n    })\r\n\r\n    return (\r\n        <div className=\"reviews\" >\r\n            {currentReviews.map((data,i) => (\r\n                        <div key={i} className=\"review\"> \r\n                                <div className='reviewer'>\r\n                                    <Avatar />\r\n                                    <h4 className=\"reviewer_name\">{data.friend ? data.reviewer.name: ''}</h4>\r\n                                </div>\r\n                                <div className=\"rating\">\r\n\r\n                                    <Rating name=\"read-only\" value={data.ratings.Overall} readOnly size='medium' />\r\n                                    <h4 className=\"review_title\">\"{data.title}\"</h4>\r\n                                </div>\r\n                                <p>{data.comment}</p>\r\n\r\n                                <div>\r\n\r\n                                    { !data.showMore? (\r\n                                    <div className=\"ratings_rem\">\r\n                                        <Box >\r\n                                            <Typography component=\"legend\">Delivery Time</Typography>\r\n                                            <Rating name=\"read-only\" value={data.ratings.delivery_time} readOnly size='small' />\r\n                                        </Box>\r\n                                        <Box>\r\n                                            <Typography component=\"legend\">Discounts and Offers</Typography>\r\n                                            <Rating name=\"read-only\" value={data.ratings.discounts_and_offers} readOnly size='small' />\r\n                                        </Box>\r\n                                        \r\n                                        <Box>\r\n                                            <Typography component=\"legend\">Matches Description</Typography>\r\n                                            <Rating name=\"read-only\" value={data.ratings.matches_description} readOnly size='small' />\r\n                                        </Box>\r\n                                        \r\n                                        <Box>\r\n                                            <Typography component=\"legend\">Matches Photo</Typography>\r\n                                            <Rating name=\"read-only\" value={data.ratings.matches_photo} readOnly size='small' />\r\n                                        </Box>\r\n                                        \r\n                                        <Box>\r\n                                            <Typography component=\"legend\">Packaging</Typography>\r\n                                            <Rating name=\"read-only\" value={data.ratings.packaging} readOnly size='small' />\r\n                                        </Box>\r\n                                        \r\n                                        <Box>\r\n                                            <Typography component=\"legend\">Price</Typography>\r\n                                            <Rating name=\"read-only\" value={data.ratings.price} readOnly size='small' />\r\n                                        </Box>    \r\n                                    </div>):null}\r\n                                </div>\r\n\r\n                                <button\r\n                                className=\"showMore\"\r\n                                onClick={ () => showMore(data)}>\r\n                                {data.showMore? \"Show more\" : \"Show less\"}\r\n                                </button>\r\n                                <Divider className=\"dr\"/>\r\n                            </div>\r\n                \r\n                    ))} \r\n                \r\n        </div>\r\n    )  \r\n}\r\n\r\nexport default Reviews\r\n","import React from 'react'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport \"./Pagenation.css\";\r\n\r\n\r\nfunction Pagenation({numberOfReviews, reviewsPerPage, pagenate}) {\r\n\r\n    if(!numberOfReviews){\r\n        return <div></div>\r\n    }\r\n\r\n    const pageNumbers = [];\r\n\r\n    for(var i=1; i<=Math.ceil(numberOfReviews/reviewsPerPage);i++){\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <div className='pagenation'>\r\n            <Pagination\r\n            count={Math.ceil(numberOfReviews/reviewsPerPage)}\r\n            onChange={pagenate} />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Pagenation\r\n","import React,{useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Reviews from './Components/Reviews';\r\nimport Pagenation from './Components/Pagenation';\r\nimport Container from '@material-ui/core/Container';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n    const [totalNoOfReviews, setTotalNoOfReviews] = useState(0);\r\n    const [reviews, setReviews] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [productId, setProductId] = useState('');\r\n    const [viewerId, setViewerId] = useState('');\r\n    const [reviewsPerPage] = useState(3);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [rendering, setRendering] = useState(true);\r\n\r\n    const products = []; \r\n    const viewers = [];\r\n    for(let i=1; i<=20;i++){\r\n        const product = {\r\n            label: `Product ${i}`,\r\n            value: `${i}`\r\n        }\r\n        products.push(product);\r\n    }\r\n    for(let i=1; i<=10;i++){\r\n        const viewer = {\r\n            label: `Viewer ${i}`,\r\n            value: `${i}`\r\n        }\r\n\r\n        viewers.push(viewer);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(productId && viewerId){\r\n            const fetchdata = async () => {\r\n                setIsLoading(true)\r\n                const res = await axios.get(`http://www.i2ce.in/reviews/${productId}/${viewerId}`)\r\n                setReviews(res.data.reviews )\r\n                setTotalNoOfReviews(res.data.reviews.length)\r\n                setIsLoading(false)\r\n            }\r\n            fetchdata()\r\n            \r\n        }\r\n    }, [productId, viewerId]);\r\n\r\n    const pagenate = (e,value)=> {\r\n        setCurrentPage(value)\r\n    }\r\n\r\n    const showMore = (data)=>{\r\n        data.showMore = !data.showMore\r\n        setRendering(!rendering)\r\n    }\r\n\r\n    const sortByRating = ()=>{\r\n        reviews.sort((a,b)=>{\r\n            return b.ratings.Overall- a.ratings.Overall\r\n        })\r\n        setRendering(!rendering)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"select_options\">\r\n                <select className=\"product_id\" value={productId} onChange={(e)=> {setProductId(e.target.value)}}>\r\n                    <option value='' >Select Product</option>\r\n                    {\r\n                        products.map( (data,i) => (\r\n                            <option key={i} value={data.value} >{data.label}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n                <select className=\"viewer_id\" value={viewerId} onChange={(e)=> {setViewerId(e.target.value)}}>\r\n                    <option value='' >Select Viewer</option>\r\n                    {\r\n                        viewers.map( (data,i) => (\r\n                            <option key={i} value={data.value} >{data.label}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n                <button onClick={sortByRating}>Sort by rating</button>\r\n            </div>\r\n\r\n            <Container maxWidth=\"sm\">\r\n                <div>\r\n                    <Reviews reviews={reviews}\r\n                    IsLoading={isLoading}\r\n                        currentPage={currentPage}\r\n                        reviewsPerPage={reviewsPerPage}\r\n                        showMore={showMore}\r\n                        rendering={rendering}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Pagenation \r\n                    numberOfReviews={totalNoOfReviews}\r\n                    reviewsPerPage={reviewsPerPage}\r\n                    pagenate={pagenate}\r\n                    />\r\n                </div>\r\n            </Container>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\n  export default reportWebVitals;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}